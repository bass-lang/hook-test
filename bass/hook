#!/usr/bin/env bass

(def *memos*
  *dir*/memos.json)

(use (.hmac)
     (.strings)
     (.git (linux/alpine/git))
     (git:github/vito/tabs/ref/main/gh))

(def *hook-secret*
  (mask *env*:WEBHOOK_SECRET :hook-secret))

(defn main []
  (let [{:headers {:X-Github-Delivery delivery
                   :X-Github-Event event
                   :X-Hub-Signature-256 signature}
         :body body} (next *stdin*)]
    (verify signature body)
    (emit (handle delivery event body) *stdout*)))

(defn verify [signature body]
  (let [[scheme claim] (strings:split signature "=")
        hmac-scheme (hmac:scheme scheme)]
    (if (hmac-scheme:verify *hook-secret* claim body)
      :ok
      (error "invalid signature"))))

(defn handle [delivery event body]
  (let [payload (decode-json body)]
    (case event
      "check_suite"
      (case payload:action
        "requested"
        (-> (*dir*/hooks/check-suite-requested payload)
            (with-env {:APP_PRIVATE_KEY *env*:APP_PRIVATE_KEY})
            (start (fn [ok?] (logf "delivery %s (%s) ok?: %s" delivery event ok?))))
        _
        false)
      _
        false)))

(defn decode-json [payload]
  (next (read (mkfile ./json payload) :json)))
